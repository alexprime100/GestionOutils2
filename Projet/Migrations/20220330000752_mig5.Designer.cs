// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projet;

namespace Projet.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220330000752_mig5")]
    partial class mig5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projet.Models.Achat", b =>
                {
                    b.Property<long>("IdAchat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdCommande")
                        .HasColumnType("bigint");

                    b.HasKey("IdAchat");

                    b.ToTable("Achats");
                });

            modelBuilder.Entity("Projet.Models.Commande", b =>
                {
                    b.Property<long>("IdCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<string>("MoyenPaiement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.HasKey("IdCommande");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("Projet.Models.Electrique", b =>
                {
                    b.Property<long>("IdElectrique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdOutil")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NomOutil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<long>("Puissance")
                        .HasColumnType("bigint");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdElectrique");

                    b.ToTable("Electriques");
                });

            modelBuilder.Entity("Projet.Models.Entreprise", b =>
                {
                    b.Property<long>("IdEntreprise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<string>("Siren")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEntreprise");

                    b.ToTable("Entreprises");
                });

            modelBuilder.Entity("Projet.Models.Hydraulique", b =>
                {
                    b.Property<long>("IdHydraulique")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdOutil")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NomOutil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Pression")
                        .HasColumnType("bigint");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdHydraulique");

                    b.ToTable("Hydrauliques");
                });

            modelBuilder.Entity("Projet.Models.Inventaire", b =>
                {
                    b.Property<long>("IdInventaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdOutil")
                        .HasColumnType("bigint");

                    b.HasKey("IdInventaire");

                    b.ToTable("Inventaires");
                });

            modelBuilder.Entity("Projet.Models.Location", b =>
                {
                    b.Property<long>("IdLocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdCommande")
                        .HasColumnType("bigint");

                    b.HasKey("IdLocation");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Projet.Models.Manuel", b =>
                {
                    b.Property<long>("IdManuel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdOutil")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NomOutil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prix")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdManuel");

                    b.ToTable("Manuels");
                });

            modelBuilder.Entity("Projet.Models.Outil", b =>
                {
                    b.Property<long>("IdOutil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Commentaires")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomOutil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NombreAvis")
                        .HasColumnType("int");

                    b.Property<int>("NombreEtoiles")
                        .HasColumnType("int");

                    b.Property<double>("PrixDeLocation")
                        .HasColumnType("float");

                    b.Property<double>("PrixDeVente")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdOutil");

                    b.ToTable("Outils");
                });

            modelBuilder.Entity("Projet.Models.Panier", b =>
                {
                    b.Property<long>("IdLocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdCommande")
                        .HasColumnType("bigint");

                    b.HasKey("IdLocation");

                    b.ToTable("Paniers");
                });

            modelBuilder.Entity("Projet.Models.Particulier", b =>
                {
                    b.Property<long>("IdParticulier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdClient")
                        .HasColumnType("bigint");

                    b.Property<string>("MotDePasse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdParticulier");

                    b.ToTable("Particuliers");
                });

            modelBuilder.Entity("Projet.Models.Utilisateur", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Courriel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotDePasse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Adresse = "adress1",
                            Courriel = "user@mail.com",
                            DateNaissance = new DateTime(2022, 3, 29, 20, 7, 52, 527, DateTimeKind.Local).AddTicks(609),
                            MotDePasse = "eUNII0SSTvlI7K6LMD/F5aMGGEm3Fj1d89N4HOoFKAE=",
                            Nom = "user",
                            Prenom = "user",
                            Role = "User",
                            Telephone = "111"
                        },
                        new
                        {
                            Id = 2L,
                            Adresse = "adress2",
                            Courriel = "admin@mail.com",
                            DateNaissance = new DateTime(2022, 3, 29, 20, 7, 52, 536, DateTimeKind.Local).AddTicks(9000),
                            MotDePasse = "OHVv+u4mWEQqeCR0MfD8jlPCST6M8f0AYab+lDy+TRI=",
                            Nom = "admin",
                            Prenom = "admin",
                            Role = "Admin",
                            Telephone = "222"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
